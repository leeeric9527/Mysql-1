- group by:如果select 后出现的字段没有在group by 后出现,则必须对该字段进行聚合处理
- distinct:  select distinct 字段1,字段2　from 表名
- select 字段1*2 as name1,字段2+10 as name2 from 表;
- 多表查询
    1.笛卡尔积:不加where条件
    2.加where条件,只显示匹配到的记录

****************************************************************************************
Day04笔记
1.索引
    1.主键(primary key) 自增长属性(auto_increment)
        - 使用规则:1.一个表中只能有一个主键字段
                2.约束:字段值不允许重复,且不能为NULL
                3.KEY标志:PRI
                4.通常设置记录编号的字段id,能唯一锁定一条记录
    2.创建表时:
        create table 表名(id int primary key auto_increment,.......)auto_increment=1000,charset=utf8,engine=INnoDB;
        
        示例:
        create table t1(id int primary key auto_increment,name varchar(20) not null)auto_increment=1000,charset=utf8;
        or
        create table 表名(id int,name varchar(20),primary(id,name)) ----> 复合主键,不经常用
            +-------+-------------+------+-----+---------+----------------+
            | Field | Type        | Null | Key | Default | Extra          |
            +-------+-------------+------+-----+---------+----------------+
            | id    | int(11)     | NO   | PRI | NULL    | auto_increment |
            | name  | varchar(20) | NO   |     | NULL    |                |
            +-------+-------------+------+-----+---------+----------------+

            +------+-----------+
            | id   | name      |
            +------+-----------+
            | 1000 | 王伟超  　  |
            | 1001 | 张奔       |
            | 1002 | 安付伟     |
            | 1003 | 陈华齐     |
            | 1004 | 庞瑞       |
            +------+-----------+

        注意:如果删除了一个用户或者记录之后,再添加记录不在从当前开始增加,能锁定唯一一条记录.
        例:delete from t1 where id = 1004;
           insert into t1 values('庞瑞涛');
            +------+-----------+
            | id   | name      |
            +------+-----------+
            | 1000 | 王伟超    |
            | 1001 | 张奔      |
            | 1002 | 安付伟    |
            | 1003 | 陈华齐    |
            | 1005 | 庞瑞涛    |
            +------+-----------+
    
    3.在已经创建的表中----添加主键
        alter table 表名 add primary key(id);
    
    4.删除一个主键
        1.删除自增长属性(modify)
        et: alter table 表名 modify id int;
        2.删除主键(drop)
        alter table 表名 drop primary key;
        注意:首先删除增长属性,然后删除主键;
    
2.外键:
    1.定义:让当前表字段的值在另一个表的范围内选择
    2.语法:
        foreign key(参考字段名)
        references 主表(被参考字段名)
        on delete 级联动作
        on update 级联动作
    3.使用规则
        1.主表　从表字段数据类型要一致
        2.主表的被参考字段:主键
    4.实例:
        表1 缴费信息表(财务)  建立:create table jftab(id int primary key,name varchar(20),class char(5),money smallint)charset=utf8;
                                    insert into jftab values(1,'唐伯虎','AID09',300),(2,'祝枝山','AID09',300),(3,'点秋香','AID09',300);
        表2 班主任信息表（从表)  create table bjtab(stu_id int,name varchar(20),money smallint,foreign key(stu_id) references jftab(id) on delete cascade on update cascade)chatset=utf8;
        注意:设置id关联后,主表中的id值修改从表的id也会跟着改变,删除也是如此
    5.删除
        alter table 表名　drop forgin key 外键名;
        外建名:show create table 表名;
        示例:
        alter table bjtab drop foreign key bjtab_ibfk_1;
        alter table bjtab　add forgin key(stu_id) references jftab(id);
        delete from jftab where name = "点秋香"; 就阔以删除了

    6.已有表添加
        alter table 表名　add forgin key(........)

    7.级联动作都有哪些?
        1.cascade
            数据级联删除　更新(参考字段) 
        2.restrict(默认)
            从表有相关记录,不允许主表操作
        3.set null
            主表删除　更新,从表相关联记录字段值设置为NULL
3.锁
    1.目的:解决客户端并发访问的冲突问题
    2.锁分类:
        1)锁类型
            1.读锁(共享锁)
                select:加读锁之后别人不能更改表记录,但可以进行查询
                
            2.写锁(互斥锁,排他锁)
                update:加写锁后别人不能查　也不能改
        2)锁粒度
            1.表级锁：加读锁　写锁
                     MyISAM 搜索引擎 只支持表级锁
            2.行级锁：加读锁　写锁
    
4.存储引擎(处理表的处理器)
    1.基本操作：
        1.查看所有的存储引擎
            mysql> show engines;
        2.查看已有表的存储引擎
            show create table 表名;
        3.指定存储引擎:
            create table 表名(....)engine=MyISAM;   
        4.已有表;
            alter table 表名 engine=INnoDB
    2.常用存储引擎的特点:
        1.INnoDB
            1)支持外键　事务　事务回滚
            2)支持行级锁
            3)共享表空间
            注意:   InnoDB的特点:表名.frm表结构和索引文件　　　表名.ibd存放表记录　　  表名.MYI单独存档索引
        2.MyISAM
            1)支持表级锁
            2)独享表空间
            表名.frm:表结构
            表名.MYD:表记录(my data)
            表名.MYI:索引文件(my index)
            
1.MySQL的概述
    1.什么是数据库？
        数据库就是存储数据的仓库
    2.都有哪些公司使用数据库?
        电商公司,游戏公司,金融机构,政府部门,,,
    3.提供数据库服务的软件？
        1)软件分类:
            1.MySQL,Oracle,SQL-Sever,MongoDB,DB2
        2)生产环境中,如何选择使用哪一种数据库软件
            1.是否开源:
                开源软件:Mysql,MongoDB,MariaDB     
                商业软件:Oracle,DB2,SQL-server
            2.是否跨平台:
                1.不跨平台的软件:SQL-Sever(windows)
                2.跨平台.....
            3.公司类型
                1.商业软件:政府机构,金融机构,大型上市公司
                2.开源软件:游戏公司,电商公司,论坛和贴吧网站...
    4.Mysql 数据库特点:
        1.关系型数据库
            特点: 1)数据以行和列(表格形式)存储
                  2)表中每一行叫一条记录,每一列叫一个字段
                  3)表与表之间的逻辑关联叫关系
			实例
				1)关系型数据库存储数据:
					表1　学生信息表

					姓名　　    年龄　    班级
					星矢　　　　　25      三班
					水冰月　     25      六班
						
					表2  班级信息表

					班级    班主任
					三班    大空翼
					六班    苍井空
					
				2)非关系数据库存储数据

					{"姓名":"星矢","年龄":"25","班级":"三班",”班主任":"大空翼"}
					{"姓名":"水冰月","年龄":"25","班级":"六班","班主任":"苍井空"}
		2.跨平台:
			可以在Windows,Linux,Unix上运行
		3.支持多种编程语言:
			Python,Java,PHP...
	5.数据库软件,数据库,数据仓库的概念
		1.数据库(database)
			储存在计算机内的组织,可共享的数据集合

		2.数据库软件(数据库管理系统) 数据库的可视化操作界面
			一个软件,看得见,可操作的工具,可以通过SQL语句(结构化查询语句 Structured qurey languages)操作数据库

		3.数据仓库(data WareHouse,简写DW,DWH)
			数据量要比数据库大得多,主要用于数据分析和数据挖掘
			et:
				数据库:购物车表,用户信息表
				数据仓库:分析哪个时间段用户的访问量最大
2.Mysql的安装:
	1.Ubuntu安装Mysql服务
		1)安装服务端
			命令行安装: sudo apt-get install mysql-server
		2)安装客户端:
			sudo apt-get install mysql-client
		3)Ubuntu安装软件
			1.sudo apt-get updata  (访问原列表中的每个网址,读取软件列表,保存到本地/var/lib/apt/lists)
			2.sudo apt-get upgrade (把本地已安装软件与刚下载的软件列表进行比对,如果发现已安装的版本低,则更新软件)
			3.sudo apt-get -f install (表示修复依赖关系)
	2.Windows安装Mysql
		1)下载安装包
			Mysql-installer***5.7.24
		2)按照安装教程安装
	3.Mac os操作系统安装Mysql
		1) 下载安装包(dmg -> pkg)
		2) 设置环境变量
			1. vi .base_profile
			2. 在末尾写如下内容,保存并推出
				度娘搜索并复制黏贴
3.启动和连接Mysql数据库:
	1.启动服务端(终端下)
		1)查看Mysql状态(是否是可用的)
			sudo /etc/init.d/mysql status
		2)启动mysql服务
			sudo /etc/init.d/mysql start | stop(关闭) | restart(配置文件后重启)
	2.客户端连接
		1)命令格式:
			mysql -h主机地址 -u用户名 -p
		2)本地连接可以省略-h选项
			mysql -uroot -p123456
	3. MYSQL的核心是关系(二维表)
4.基本SQL命令:
	1.SQL命令的使用规则
		1)SQL命令不区分大小写,但是区分中英文的标点符号,需要全部使用英文标点符号("" : 空格)
		2)每条命令以英文的分号结尾(;) 
		3)如果写错命令,需要使用\c终止当前命令的执行
	2.库的管理:
		1).库的基本操作
			1)查看已有库	
				show databases;

			2)创建库
				create database 自定义的库名;
				创建的同时制定字符集
				creat database 库名 character set utf8;

			3)如何查看创建库的语句(字符集)
				show create database 库名;
			
			4)查看当前所在库
				select database();

			5)　切换/选择库
				use 库名;
			
			6)查看当前库中所有的表
				show tables;

			7)删除库
				drop database 库名;

		2).库名的命名规则
			1)库名由数字,字母,下划线组成,不能使用纯数字

			2)库名区分大小写
				et:
					1.SQL命令不区分大小写
						CREATE DATABASES TESTDB;  等价于---> create database testdb;
					2.库名区分大小写	
						create database TESTDB;	
						creat database testdb;
						两个库是完全不一样的库
					3.不能使用特殊字符和Mysql的关键字
	3.表记录的管理
		1).表的管理

				1)创建表: create table 表名 (字段名 数据类型,字段2 数据类型,...);
				  创建的同时制定字符集: create table 表名(字段1 数据类型,字段2 数据类型,...)character set utf8;
				
				2)查看已有表的字符集
					show create table 表名;
				
				3)查看表结构
					desc 表名;
				
				4)删除表
					drop table 表名;
				
				注:1.如果涉及多个库操作表,一定不要忘了切换数据库
				   2.所有的数据在数据库中都是以文件的形式存储的,存档目录为:   /var/lib/mysql

		2).表记录的管理(操作数据)

			*插入数据:(insert)
				1.	insert into 表名 values(值1),(值2),...;   注意:()中的值实际上是代表一行,一条记录
					insert into studio values(1,"zack",300)(2,"jack",80)(3,"bob",23)；
				2. insert into 表名(字段1,字段2,...) values(值1),(值2),...;
					et:
						insert into stuinfo(name,age) values("zack",20)("jack",23)
			
			*查询数据
				1.select * from 表名;
					//查询表中所有的数据
				2.select * from 表名 where 条件;
					//查询表中满足天剑的数据
				3.select 字段1，字段2 from 表名 where 条件;
					注意:[]表示可选添加
		
		3).修改mysql的配置文件
			1.方法:修改mysql的配置文件
			2.步骤:
				1.获取root权限
					sudo -i
				2.cd /etc/mysql/mysql.conf.d/
				3.备份（相当重要)
					cp mysql.cnf mysql.cnf.bak
				4.修改的方式:
					1)使用sublime修改: 
						subl mysql.cnf
						找到[mysqld] 
						添加 character_set_server= utf8
					2)使用vi修改文件
						vi mysql.cnf
						找到[mysqld] 
						添加 character_set_server= utf8
				5. 重启mysql服务
				sudo  /etc/init.d/mysql restart 
				6.连接客户端
					mysql -uroot -p123456


5.数据类型	
	1.数值类型
		1)整型
			1.int 大整型(4个字节)
				取值范围:0~2 ** 32 - 1
			2.tinyint 微小整型(1个字节)
				* 有符号整型(默认)
					取值范围 -128 ~ 127
				  	id tinyint signed
				* 无符号整型(unsigned)
					取值范围0~255
					age tinyint unsigned
			3.smallint 小整型(2字节)
			4.bigint 极大整型(8个字节)
		2)浮点型
			1.float(4个字节,最多显示７个有效位)　单精度
				* 用法:
					字段名　float(m,n)
					m表示总位数,n表示小数位的位数
					et:
						score float(3,1)
			2.double(8个字节) 双精度 			 
				float 是单精度　误差更大
				double 是双精度　误差稍小，在mysql 内部运算时，都采用double运算
			3.decimal(最多可以显示28个有效位)
				用法:
					decimal(m,n)
					m表示总位数，n表示小数位位数
			4.数值类型占用的存储空间该如何运算
				整数和小数是分开存储的,需要各自计算所需的字节数
				规则:
					将9的倍数包装成4个字节
				余数占用字节对照表
					余数     字节
					0		0
					1-2		1
					3-4		2
					5-6		3
					7-8 	4
				et:
					decimal(19,9)
					计算存储空间:
					  1.整数位数　除以9,商表示占用4个字节
						余数,根据对照表判断占用几个字节
						10 / 9 商 1　余数　１
						占用字节数　4 + 1 = 5
					  2.小数位数
					  　９　／　９　＝　０
					  占用字节数: 4 + 0 = 4
					
		


	2.字符类型
		1.char(m)
			m制定最大显示宽度,同时也是最大字符个数
			m的取值范围: 1~255
			特点:
				定长存储
				char(10) 固定分配10个字符的空间存储数据
		2.varchar(m)
			m制定最大显示宽度，也制定最大字符个数
			取值范围: 1~65535 
			特点: 变长存储　varchar(10)　根据数据的实际长度分配空间,小于10个字符，按照实际的字符数分配空间
				最大可分配十个字符的空间,超过10个字符的数据,无法存储,会报错
		3.text ／　longtext(4G) / blob / longblob
			text相关的类型可用来存储大批量的文本数据(博文等)
			bolb相关的类型更适用于二进制数据的存储(图片) 
		注意:
			1)定长和变长字符类型在存储空间上区别较大,
				char 定长存储：浪费存储空间,但性能高
				varchar 变长存储:节省存储空间,但性能低
			2)字符类型的显示宽度与数值类型宽度的区别
				et:int(11)
					char(10)
					1.数值类型的宽度为显示宽度,用于select查询时候子暗示结果.和占用存储空间无关
						及时超出显示宽度,只要没有超出当前类型的取值范围，都可以插入成功
					２．字符类型的宽度不仅是显示宽度,还是最大字符个数,超出就无法存储
					3.数值类型如果制定了显示宽度,而数据长度小于宽度,会自动补0，填充显示宽度
						结合zerofill 属性查看效果
						id int(5) zerofill,

	3.枚举和集合
	4.日期和时间类型
				



			
				

					












						
					

			
			
				 
 

		



			
			




	



			




                
                    
    